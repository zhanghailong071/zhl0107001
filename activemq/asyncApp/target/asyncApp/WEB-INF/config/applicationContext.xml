<?xml version="1.0" encoding="UTF-8"?>
<!-- 查找最新的schemaLocation 访问 http://www.springframework.org/schema/ -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:amq="http://activemq.apache.org/schema/core"
       xmlns:jms="http://www.springframework.org/schema/jms"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/aop  
        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
        http://www.springframework.org/schema/jms
        http://www.springframework.org/schema/jms/spring-jms-4.0.xsd
        http://activemq.apache.org/schema/core
        http://activemq.apache.org/schema/core/activemq-core-5.8.0.xsd">

    <aop:aspectj-autoproxy/>

    <!-- 配置扫描路径 -->
    <context:component-scan base-package="cn.enjoyedu">
        <context:exclude-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!-- ActiveMQ 连接工厂 -->
    <amq:connectionFactory id="amqConnectionFactory"
                           brokerURL="tcp://127.0.0.1:61616" userName="admin" password="admin"/>

    <!-- Spring Caching连接工厂 -->
    <!-- Spring用于管理真正的ConnectionFactory的ConnectionFactory -->
    <bean id="connectionFactory"
          class="org.springframework.jms.connection.CachingConnectionFactory">
        <property name="targetConnectionFactory" ref="amqConnectionFactory"></property>
        <property name="sessionCacheSize" value="100"></property>
    </bean>

    <!-- Topic类型 start -->
    <!-- 定义生产者发送消息需要的Topic类型JmsTemplate -->
    <bean id="jmsTopicTemplate" class="org.springframework.jms.core.JmsTemplate">
        <constructor-arg ref="connectionFactory"></constructor-arg>
        <!-- 发布订阅模式 -->
        <property name="pubSubDomain" value="true"></property>
    </bean>

    <!-- 定义消费者接收消息需要的Topic监听器 -->
    <jms:listener-container destination-type="topic"
                            connection-factory="connectionFactory">
        <jms:listener destination="user.topic" ref="customerService"></jms:listener>
        <jms:listener destination="user.topic" ref="dataCenter"></jms:listener>
    </jms:listener-container>

    <!-- Topic类型 end -->

    <!-- Queue类型 start start -->
    <!-- 定义生产者发送消息需要的Queue类型JmsTemplate -->
    <bean id="jmsQueueTemplate" class="org.springframework.jms.core.JmsTemplate">
        <constructor-arg ref="connectionFactory"></constructor-arg>
        <!-- 队列模式 -->
        <property name="pubSubDomain" value="false"></property>
    </bean>

    <!-- 定义消费者接收消息需要的Queue监听器 -->
    <jms:listener-container destination-type="queue"
                            connection-factory="connectionFactory">
        <jms:listener destination="user.sms" ref="processSms"></jms:listener>
        <jms:listener destination="user.email" ref="processEmail"></jms:listener>
    </jms:listener-container>
    <!-- Queue类型 start end -->

    <!--生产端接收消费者应答的监听器 -->
    <jms:listener-container destination-type="queue"
                            connection-factory="connectionFactory">
        <jms:listener destination="tempqueue" ref="getCustomResp"></jms:listener>
    </jms:listener-container>

</beans>  